// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	model "fundamental-payroll-go/model"

	mock "github.com/stretchr/testify/mock"
)

// SalaryRepository is an autogenerated mock type for the SalaryRepository type
type SalaryRepository struct {
	mock.Mock
}

// List provides a mock function with given fields:
func (_m *SalaryRepository) List() ([]model.SalaryMatrix, error) {
	ret := _m.Called()

	var r0 []model.SalaryMatrix
	var r1 error
	if rf, ok := ret.Get(0).(func() ([]model.SalaryMatrix, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() []model.SalaryMatrix); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]model.SalaryMatrix)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewSalaryRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewSalaryRepository creates a new instance of SalaryRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewSalaryRepository(t mockConstructorTestingTNewSalaryRepository) *SalaryRepository {
	mock := &SalaryRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
